minio:
  enabled: false
serviceMonitor:
  enabled: true
alloy:
  enabled: false
pyroscope:
  extraArgs:
    store-gateway.sharding-ring.replication-factor: "3"
  structuredConfig:
    storage:
      backend: s3
      s3:
        bucket_name: pyroscope-data
        endpoint: minio.${NAMESPACE:=monitoring}.svc
        insecure: true
  components:
    querier:
      kind: Deployment
      replicaCount: 3
      resources:
        limits:
          memory: 1Gi
        requests:
          memory: 256Mi
          cpu: 1
    query-frontend:
      kind: Deployment
      replicaCount: 2
      resources:
        limits:
          memory: 1Gi
        requests:
          memory: 256Mi
          cpu: 100m
    query-scheduler:
      kind: Deployment
      replicaCount: 2
      resources:
        limits:
          memory: 1Gi
        requests:
          memory: 256Mi
          cpu: 100m
    distributor:
      kind: Deployment
      replicaCount: 2
      resources:
        limits:
          memory: 1Gi
        requests:
          memory: 256Mi
          cpu: 500m
    ingester:
      kind: StatefulSet
      replicaCount: 3
      terminationGracePeriodSeconds: 600
      resources:
        limits:
          memory: 16Gi
        requests:
          memory: 8Gi
          cpu: 1
    compactor:
      kind: StatefulSet
      replicaCount: 3
      terminationGracePeriodSeconds: 1200
      persistence:
        enabled: false
      resources:
        limits:
          memory: 16Gi
        requests:
          memory: 8Gi
          cpu: 1
    store-gateway:
      kind: StatefulSet
      replicaCount: 3
      persistence:
        # The store-gateway needs not need persistent storage, but we still run it as a StatefulSet
        # This is to avoid having blocks of data being
        enabled: false
      resources:
        limits:
          memory: 16Gi
        requests:
          memory: 8Gi
          cpu: 1
      readinessProbe:
        # The store gateway can be configured to wait on startup for ring stability to be reached before it becomes
        # ready. See the `store-gateway.sharding-ring.wait-stability-min-duration` server argument for more information.
        #
        # Depending on this flag and the number of tenants + blocks that need to be synced on startup, pods can take
        # some time to become ready. This value can be used to ensure Kubernetes waits long enough and reduce errors.
        initialDelaySeconds: 60
    tenant-settings:
      kind: Deployment
      replicaCount: 1
      resources:
        limits:
          memory: 4Gi
        requests:
          memory: 16Mi
          cpu: 0.1
    ad-hoc-profiles:
      kind: Deployment
      replicaCount: 1
      resources:
        limits:
          memory: 4Gi
        requests:
          memory: 16Mi
          cpu: 0.1
