---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.2.1/charts/other/app-template/values.schema.json

defaultPodOptions:
  automountServiceAccountToken: false
  enableServiceLinks: false
  nodeSelector:
    nvidia.com/gpu.present: "true"
  labels:
    required-volume: media
    networking/allow-egress-to-internet-except-private: "true"
    networking/allow-egress-to-kubedns: "true"
    networking/allow-ingress-to-internal-nginx: "true"
    networking/allow-ingress-to-external-nginx: "true"
    networking/allow-ingress-to-prometheus: "true"
    networking/allow-ingress-to-gatus: "true"
  securityContext:
    runAsUser: 568
    runAsGroup: 568
    fsGroup: 568
    fsGroupChangePolicy: OnRootMismatch
    supplementalGroups:
      - 44
      - 109
      - 10000
service:
  main:
    controller: main
    ports:
      http:
        port: &port 8096
controllers:
  main:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        env:
          TZ: ${TZ}
          DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
          JELLYFIN_FFmpeg__probesize: "500000000"
          JELLYFIN_FFmpeg__analyzeduration: "5000000000"
          JELLYFIN_PublishedServerUrl: jellyfin.${INTERNAL_DOMAIN}
        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe
          startup:
            enabled: false
        resources:
          requests:
            cpu: 1000m
            memory: 4Gi
          limits:
            nvidia.com/gpu: 1
ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      nginx.ingress.kubernetes.io/configuration-snippet: &configurationsnippit |
        proxy_set_header Accept-Encoding "";
        sub_filter '</body>' '<script plugin="Jellyscrub" version="1.1.1.0" src="/Trickplay/ClientScript"></script></body>';
        sub_filter_once on;
      nginx.ingress.kubernetes.io/server-snippet: &serversnippit |
        location /metrics {
          deny all;
        }
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Media
      gethomepage.dev/icon: jellyfin.png
      gethomepage.dev/name: ${HOSTNAME:=jellyfin}
    className: internal
    hosts:
      - host: &internalhost ${HOSTNAME:=jellyfin}.${INTERNAL_DOMAIN}
        paths: &paths
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: *port
    tls:
      - hosts: [*internalhost]
        secretName: jellyfin-tls
  external:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      external-dns.alpha.kubernetes.io/target: "${CLUSTER_NAME}.${EXTERNAL_DOMAIN}"
      nginx.ingress.kubernetes.io/configuration-snippet: *configurationsnippit
      nginx.ingress.kubernetes.io/server-snippet: *serversnippit
    className: external
    hosts:
      - host: &externalhost ${HOSTNAME:=jellyfin}.${EXTERNAL_DOMAIN}
        paths: *paths
    tls:
      - hosts: [*externalhost]
        secretName: external-jellyfin-tls
persistence:
  config:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW_BACKUP}
    size: 20Gi
    accessMode: ReadWriteOnce
    globalMounts:
      - path: /config
  transcode:
    enabled: true
    retain: false
    storageClass: ${STORAGE_CLASS_FAST}
    size: 200Gi
    accessMode: ReadWriteOnce
    globalMounts:
      - path: /transcode
  media:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW}
    size: 10Ti
    accessMode: ReadWriteOnce
    globalMounts:
      - path: /media
  media-uhd:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW}
    size: 5Ti
    accessMode: ReadWriteOnce
    globalMounts:
      - path: /media-uhd
