image:
  repository: docker.io/grafana/grafana
replicas: 1
deploymentStrategy:
  type: Recreate
grafana.ini:
  analytics:
    check_for_updates: false
    check_for_plugin_updates: false
  auth.anonymous:
    enabled: false
  server:
    root_url: https://grafana.${INTERNAL_DOMAIN}
  auth.github:
    enabled: true
    scopes: user:email,read:org
    auth_url: https://github.com/login/oauth/authorize
    token_url: https://github.com/login/oauth/access_token
    api_url: https://api.github.com/user
    auto_assign_org_role: Admin
env:
  GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
  GF_EXPLORE_ENABLED: true
  GF_FEATURE_TOGGLES_ENABLE: publicDashboards
  GF_SERVER_ROOT_URL: https://grafana..${INTERNAL_DOMAIN}
envFromSecrets:
  - name: grafana-github-client
ingress:
  enabled: true
  pathType: Prefix
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "cloudflare"
    gethomepage.dev/enabled: "true"
    gethomepage.dev/description: Grafana is the open source analytics & monitoring solution for every database.
    gethomepage.dev/group: Monitoring
    gethomepage.dev/icon: grafana.png
    gethomepage.dev/name: Grafana
  hosts:
    - grafana.${INTERNAL_DOMAIN}
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.${INTERNAL_DOMAIN}
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: default
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
persistence:
  type: pvc
  enabled: true
  storageClassName: ${STORAGE_CLASS_SLOW_UNREPLICATED:=default}
  accessModes:
    - ReadWriteOnce
  size: 10Gi
datasources:
  datasource.yaml:
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://kube-prometheus-stack-app-prometheus.${NAMESPACE}:9090/
        access: proxy
        isDefault: true
      - name: Loki
        type: loki
        url: http://loki.${NAMESPACE}:3100/
        access: proxy
        jsonData:
          maxLines: 250
      - name: Alertmanager
        type: alertmanager
        access: proxy
        url: http://kube-prometheus-stack-app-alertmanager.${NAMESPACE}:9093
        jsonData:
          implementation: prometheus
dashboards:
  default:
    flux-cluster:
      url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
      datasource: Prometheus
    flux-control-plane:
      url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
      datasource: Prometheus
    flux-logs:
      url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
      datasource: Prometheus
    kubernetes-api-server:
      url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
      datasource: Prometheus
    kubernetes-coredns:
      url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
      datasource: Prometheus
    kubernetes-global:
      url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
      datasource: Prometheus
    kubernetes-namespaces:
      url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
      datasource: Prometheus
    kubernetes-nodes:
      url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
      datasource: Prometheus
    kubernetes-pods:
      url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
      datasource: Prometheus
sidecar:
  dashboards:
    enabled: true
    searchNamespace: ALL
  datasources:
    enabled: true
    searchNamespace: ALL
plugins:
  - grafana-clock-panel
  - grafana-piechart-panel
  - grafana-worldmap-panel
  - natel-discrete-panel
  - pr0ps-trackmap-panel
  - vonage-status-panel
serviceMonitor:
  enabled: true
testFramework:
  enabled: false
topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: grafana
