---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/values.schema.json

defaultPodOptions:
  labels:
    networking/allow-egress-to-internet-except-private: "true"
    networking/allow-egress-to-kubedns: "true"
    networking/allow-ingress-to-internal-nginx: "true"
    networking/allow-ingress-to-external-nginx: "true"
    networking/allow-ingress-to-prometheus: "true"
    networking/allow-ingress-to-uptime-kuma: "true"
  automountServiceAccountToken: false
  enableServiceLinks: false
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: required-volume
                operator: In
                values:
                  - media
          topologyKey: kubernetes.io/hostname
controllers:
  main:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        env:
          TZ: ${TZ}
service:
  main:
    controller: main
    ports:
      http:
        port: &port 8056
ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: jfa-go is a user management app for Jellyfin (and Emby as 2nd class) that provides invite-based account creation as well as other features that make one's instance much easier to manage.
      gethomepage.dev/group: Media
      gethomepage.dev/icon: jellyfin.png
      gethomepage.dev/name: Jellyfin Accounts
    className: internal
    hosts: &hosts
      - host: &host accounts.${INTERNAL_DOMAIN}
        paths:
          - path: /
            pathType: Prefix
            service:
              name: jellyfin-accounts-app # hack
              port: *port
    tls:
      - hosts:
          - *host
        secretName: jellyfin-accounts-tls
  external:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      external-dns.alpha.kubernetes.io/target: "${CLUSTER_NAME}.${EXTERNAL_DOMAIN}"
    className: external
    hosts: *hosts
    tls:
      - hosts:
          - *host
        secretName: external-jellyfin-accounts-tls
persistence:
  config:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_FAST_BACKUP}
    size: 10Gi
    accessMode: ReadWriteOnce
    globalMounts:
      - path: /data
  jellyfin:
    enabled: true
    existingClaim: jellyfin-app-config
    globalMounts:
      - path: /jf
