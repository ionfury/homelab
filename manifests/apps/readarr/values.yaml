initContainers:
  01-init-db:
    image: ghcr.io/onedr0p/postgres-init:14.8
    imagePullPolicy: IfNotPresent
    env:
      INIT_POSTGRES_DBNAME: "readarr_main readarr_log readarr_cache"
      INIT_POSTGRES_HOST: ${CLUSTER_POSTGRES_HOST}
      INIT_POSTGRES_USER:
        valueFrom:
          secretKeyRef:
            name: readarr-secret
            key: username
      INIT_POSTGRES_PASS:
        valueFrom:
          secretKeyRef:
            name: readarr-secret
            key: password
      INIT_POSTGRES_SUPER_USER:
        valueFrom:
          secretKeyRef:
            name: readarr-postgres-superuser
            key: username
      INIT_POSTGRES_SUPER_PASS:
        valueFrom:
          secretKeyRef:
            name: readarr-postgres-superuser
            key: password
env:
  TZ: ${TZ}
  READARR__INSTANCE_NAME: Readarr
  READARR__PORT: 8787
  READARR__LOG_LEVEL: info
  READARR__POSTGRES_HOST: ${CLUSTER_POSTGRES_HOST}
  READARR__POSTGRES_PORT: 5432
  READARR__POSTGRES_MAIN_DB: readarr_main
  READARR__POSTGRES_LOG_DB: readarr_log
  READARR__POSTGRES_CACHE_DB: readarr_cache
  READARR__POSTGRES_USER:
    valueFrom:
      secretKeyRef:
        name: readarr-secret
        key: username
  READARR__POSTGRES_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: readarr-secret
        key: password
  READARR__API_KEY:
    valueFrom:
      secretKeyRef:
        name: readarr-secret
        key: key
service:
  main:
    ports:
      http:
        port: 8787
ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Readarr is a ebook collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new books from your favorite authors and will interface with clients and indexers to grab, sort, and rename them.
      gethomepage.dev/group: Media
      gethomepage.dev/icon: readarr.png
      gethomepage.dev/name: readarr
      gethomepage.dev/widget.type: readarr
      gethomepage.dev/widget.url: http://readarr-app.${NAMESPACE}.svc.cluster.local:8787
    ingressClassName: internal
    hosts:
      - host: readarr.${INTERNAL_DOMAIN}
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - readarr.${INTERNAL_DOMAIN}
        secretName: readarr-tls
podSecurityContext:
  runAsUser: 568
  runAsGroup: 568
  fsGroup: 568
  fsGroupChangePolicy: OnRootMismatch
persistence:
  media:
    enabled: true
    existingClaim: jellyfin-app-media
    mountPath: /media
  config:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW_BACKUP}
    size: 10Gi
    accessMode: ReadWriteOnce
    mountPath: /config
affinity:
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: required-volume
              operator: In
              values:
                - media
        topologyKey: kubernetes.io/hostname
resources:
  requests:
    cpu: 22m
    memory: 149Mi
