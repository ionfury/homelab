---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/values.schema.json

defaultPodOptions:
  labels:
    networking/allow-egress-to-internet: "false"
    networking/allow-egress-to-postgres: "true"
    networking/allow-egress-to-minio: "true"
    networking/allow-egress-to-kubedns: "true"
    networking/allow-ingress-to-internal-nginx: "true"
    networking/allow-ingress-to-external-nginx: "true"
    networking/allow-ingress-to-prometheus: "true"
    networking/allow-ingress-to-uptime-kuma: "true"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - zipline-app
            topologyKey: kubernetes.io/hostname
service:
  main:
    controller: main
    ports:
      http:
        port: &port 3000
controllers:
  main:
    type: deployment
    replicas: 3
    strategy: RollingUpdate
    rollingUpdate:
      surge: 25%
      unavailable: 25%
    annotations:
      reloader.stakater.com/auto: "true"
    initContainers:
      01-init-db:
        image:
          repository: ghcr.io/onedr0p/postgres-init
          tag: 14.8
        envFrom:
          - secretRef:
              name: zipline-storage-secret
        env:
          INIT_POSTGRES_DBNAME: "zipline_main"
          INIT_POSTGRES_HOST: ${CLUSTER_POSTGRES_HOST}
          INIT_POSTGRES_SUPER_USER:
            valueFrom:
              secretKeyRef:
                name: zipline-postgres-superuser
                key: username
          INIT_POSTGRES_SUPER_PASS:
            valueFrom:
              secretKeyRef:
                name: zipline-postgres-superuser
                key: password
    containers:
      main:
        resources:
          requests:
            cpu: 5m
            memory: 256Mi
          limits:
            memory: 512Mi
        envFrom:
          - secretRef:
              name: zipline-storage-secret
        env:
          # Core Config
          TZ: ${TZ}
          CORE_SECRET:
            valueFrom:
              secretKeyRef:
                name: zipline-secret
                key: key
          DATASOURCE_TYPE: s3
          DATASOURCE_S3_BUCKET: zipline
          DATASOURCE_S3_ENDPOINT: ${CLUSTER_MINIO_HOST}
          DATASOURCE_S3_FORCE_S3_PATH: "true"
          DATASOURCE_S3_PORT: "9000"
          DATASOURCE_S3_USE_SSL: "false"
          CORE_HOST: "0.0.0.0"
          CORE_PORT: *port
          CORE_RETURN_HTTPS: "true"
          # Exif
          EXIF_REMOVE_GPS: "true"
          # Features
          FEATURES_INVITES: "false"
          FEATURES_ROBOTS_TXT: "false"
          FEATURES_USER_REGISTRATION: "false"
          # Uploader
          UPLOADER_DEFAULT_FORMAT: "RANDOM"
          UPLOADER_DISABLED_EXTENSIONS: "ps1,pdf,bat,sh,fish"
          UPLOADER_DEFAULT_EXPIRATION: ""
          UPLOADER_ROUTE: "/u"
          UPLOADER_LENGTH: 6
          # URLs
          URLS_ROUTE: "/go"
          URLS_LENGTH: 6
          # Website
          WEBSITE_TITLE: "${EXTERNAL_DOMAIN}"
          WEBSITE_SHOW_FILES_PER_USER: "false"
          WEBSITE_SHOW_VERSION: "false"
ingress:
  main:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: A ShareX/file upload server that is easy to use, packed with features, and with an easy setup!
      gethomepage.dev/group: Share
      gethomepage.dev/icon: zipline.png
      gethomepage.dev/name: Zipline
    className: internal
    hosts:
      - host: &internalhost ${HOSTNAME:=zipline}.${INTERNAL_DOMAIN}
        paths:
          - path: /
            pathType: Prefix
            service:
              name: zipline-app # hack
              port: *port
    tls:
      - hosts:
          - *internalhost
        secretName: zipline-tls
  external:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      external-dns.alpha.kubernetes.io/target: "${CLUSTER_NAME}.${EXTERNAL_DOMAIN}"
    className: external
    hosts:
      - host: &externalhost ${HOSTNAME:=zipline}.${EXTERNAL_DOMAIN}
        paths:
          - path: /go
            pathType: Prefix
            service:
              name: zipline-app # hack
              port: *port
          - path: /u
            pathType: Prefix
            service:
              name: zipline-app # hack
              port: *port
          - path: /code
            pathType: Prefix
            service:
              name: zipline-app # hack
              port: *port
          - path: /view
            pathType: Prefix
            service:
              name: main
              port: *port
    tls:
      - hosts:
          - *externalhost
        secretName: zipline-external-tls
