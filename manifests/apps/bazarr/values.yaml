controllers:
  main:
    annotations:
      reloader.stakater.com/auto: "true"
    pod:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    initContainers:
      01-init-db:
        image:
          repository: ghcr.io/onedr0p/postgres-init
          tag: "14.8"
        imagePullPolicy: IfNotPresent
        env:
          INIT_POSTGRES_DBNAME: "bazarr_main"
          INIT_POSTGRES_HOST: ${CLUSTER_POSTGRES_HOST}
          INIT_POSTGRES_USER:
            valueFrom:
              secretKeyRef:
                name: bazarr-secret
                key: username
          INIT_POSTGRES_PASS:
            valueFrom:
              secretKeyRef:
                name: bazarr-secret
                key: password
          INIT_POSTGRES_SUPER_USER:
            valueFrom:
              secretKeyRef:
                name: bazarr-postgres-superuser
                key: username
          INIT_POSTGRES_SUPER_PASS:
            valueFrom:
              secretKeyRef:
                name: bazarr-postgres-superuser
                key: password
    containers:
      main:
        resources:
          requests:
            cpu: 573m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 10Gi
        env:
          TZ: ${TZ}
          POSTGRES_HOST: ${CLUSTER_POSTGRES_HOST}
          POSTGRES_PORT: 5432
          POSTGRES_ENABLED: "true"
          POSTGRES_DATABASE: bazarr_main
          POSTGRES_USERNAME:
            valueFrom:
              secretKeyRef:
                name: bazarr-secret
                key: username
          POSTGRES_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: bazarr-secret
                key: password
          API_KEY:
            valueFrom:
              secretKeyRef:
                name: bazarr-secret
                key: key
defaultPodOptions:
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: required-volume
                operator: In
                values:
                  - media
          topologyKey: kubernetes.io/hostname
service:
  main:
    ports:
      http:
        port: 6767
ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: bazarr is a music collection manager for Usenet and BitTorrent users.
      gethomepage.dev/group: Media
      gethomepage.dev/icon: bazarr.png
      gethomepage.dev/name: bazarr
    className: internal
    hosts:
      - host: bazarr.${INTERNAL_DOMAIN}
        paths:
          - path: /
            pathType: Prefix
            service:
              name: main
              port: http
    tls:
      - hosts:
          - bazarr.${INTERNAL_DOMAIN}
        secretName: bazarr-tls
persistence:
  media:
    enabled: true
    existingClaim: jellyfin-app-media
    mountPath: /media
    advancedMounts:
      main:
        main:
          - path: /media
  config:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW_BACKUP}
    size: 10Gi
    accessMode: ReadWriteOnce
    advancedMounts:
      main:
        main:
          - path: /config
