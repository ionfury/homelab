initContainers:
  01-init-db:
    image: ghcr.io/onedr0p/postgres-init:14.8
    imagePullPolicy: IfNotPresent
    env:
      INIT_POSTGRES_DBNAME: "paperless"
      INIT_POSTGRES_HOST: ${CLUSTER_POSTGRES_HOST}
      INIT_POSTGRES_USER:
        valueFrom:
          secretKeyRef:
            name: paperless-ngx-secret
            key: username
      INIT_POSTGRES_PASS:
        valueFrom:
          secretKeyRef:
            name: paperless-ngx-secret
            key: password
      INIT_POSTGRES_SUPER_USER:
        valueFrom:
          secretKeyRef:
            name: paperless-ngx-postgres-superuser
            key: username
      INIT_POSTGRES_SUPER_PASS:
        valueFrom:
          secretKeyRef:
            name: paperless-ngx-postgres-superuser
            key: password
env:
  - name: PAPERLESS_DBUSER
    valueFrom:
      secretKeyRef:
        name: paperless-ngx-secret
        key: username
  - name: PAPERLESS_DBPASS
    valueFrom:
      secretKeyRef:
        name: paperless-ngx-secret
        key: password
  - name: PAPERLESS_SECRET_KEY
    valueFrom:
      secretKeyRef:
        name: paperless-ngx-secret
        key: key
  - name: PAPERLESS_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: paperless-ngx-secret
        key: admin-password
configMaps:
  config:
    enabled: true
    data:
      PAPERLESS_DBHOST: ${CLUSTER_POSTGRES_HOST}
      PAPERLESS_PORT: "8000"
      PAPERLESS_URL: https://paperless.${INTERNAL_DOMAIN}
      PAPERLESS_ALLOWED_HOSTS: "*"
      PAPERLESS_TIME_ZONE: America/Chicago
      PAPERLESS_OCR_ROTATE_PAGES_THRESHOLD: "8"
      PAPERLESS_REDIS: ${CLUSTER_REDIS_HOST}
      PAPERLESS_ADMIN_USER: admin
envFrom:
  - configMapRef:
      name: paperless-ngx-app-config
automountServiceToken: false
service:
  main:
    ports:
      http:
        port: 8000
ingress:
  main:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: "cloudflare"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-buffering: "off"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Paperless-ngx is a document management system that transforms your physical documents into a searchable online archive so you can keep, well, less paper.
      gethomepage.dev/group: Share
      gethomepage.dev/icon: paperless-ng.png
      gethomepage.dev/name: Paperless
      gethomepage.dev/widget.type: paperlessngx
      gethomepage.dev/widget.provider: paperlessngx
    hosts:
      - host: paperless.${INTERNAL_DOMAIN}
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - paperless.${INTERNAL_DOMAIN}
        secretName: paperless-tls
probes:
  liveness:
    enabled: true
    custom: true
    spec:
      httpGet:
        port: http
  readiness:
    enabled: true
    custom: true
    spec:
      httpGet:
        port: http
  startup:
    enabled: true
    custom: true
    spec:
      httpGet:
        port: http
persistence:
  data:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW_BACKUP}
    size: 10Gi
    accessMode: ReadWriteOnce
    mountPath: /usr/src/paperless/data
  media:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW_BACKUP}
    size: 10Gi
    accessMode: ReadWriteOnce
    mountPath: /usr/src/paperless/media
  consume:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_SLOW}
    size: 5Gi
    accessMode: ReadWriteOnce
    mountPath: /usr/src/paperless/consume
