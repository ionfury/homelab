defaultPodOptions:
  labels:
    networking/allow-egress-to-internet-except-private: "true"
    networking/allow-ingress-to-internal-nginx: "true"
    networking/allow-ingress-to-prometheus: "true"
    networking/allow-ingress-to-gatus: "true"
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: required-volume
                operator: In
                values:
                  - media
          topologyKey: kubernetes.io/hostname
controllers:
  main:
    annotations:
      reloader.stakater.com/auto: "true"
    pod:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    containers:
      main:
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        env:
          BASIC_AUTH_USERNAME:
            valueFrom:
              secretKeyRef:
                name: pinchflat-credentials
                key: username
          BASIC_AUTH_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: pinchflat-credentials
                key: password
service:
  main:
    ports:
      http:
        port: 8945
ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Pinchflat is a self-hosted app for downloading YouTube content built using yt-dlp.
      gethomepage.dev/group: Media
      gethomepage.dev/icon: youtube.png
      gethomepage.dev/name: Pinchflat
    className: internal
    hosts:
      - host: youtube.${INTERNAL_DOMAIN}
        paths:
          - path: /
            pathType: Prefix
            service:
              name: main
              port: http
    tls:
      - hosts:
          - youtube.${INTERNAL_DOMAIN}
        secretName: pinchflat-tls
persistence:
  config:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_FAST_BACKUP}
    size: 1Gi
    accessMode: ReadWriteOnce
    advancedMounts:
      main:
        main:
          - path: /config
  downloads:
    enabled: true
    retain: true
    storageClass: ${STORAGE_CLASS_FAST_BACKUP}
    size: 100Gi
    accessMode: ReadWriteOnce
    advancedMounts:
      main:
        main:
          - path: /downloads
