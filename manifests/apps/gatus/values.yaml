---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/values.schema.json

defaultPodOptions:
  labels:
    networking/allow-egress-to-internet-except-private: "true"
    networking/allow-egress-to-private: "true"
    networking/allow-egress-to-blocky: "true"
    networking/allow-egress-to-kubedns: "true"
    networking/allow-egress-to-postgres: "true"
    networking/allow-ingress-to-internal-nginx: "true"
    networking/allow-ingress-to-external-nginx: "true"
    networking/allow-ingress-to-prometheus: "true"
service:
  main:
    controller: main
    ports:
      http:
        port: &port 8080
controllers:
  main:
    annotations:
      reloader.stakater.com/auto: "true"
    replicas: 2
    strategy: RollingUpdate
    rollingUpdate:
      surge: 25%
      unavailable: 25%
    initContainers:
      01-init-db:
        image:
          repository: ghcr.io/onedr0p/postgres-init
          tag: "14.8"
        env:
          TZ: &tz ${TZ}
          INIT_POSTGRES_DBNAME: &pgdb gatus_main
          INIT_POSTGRES_HOST: &pghost ${CLUSTER_POSTGRES_HOST}
          INIT_POSTGRES_USER: &pguser
            valueFrom:
              secretKeyRef:
                name: gatus-secret
                key: username
          INIT_POSTGRES_PASS: &pgpass
            valueFrom:
              secretKeyRef:
                name: gatus-secret
                key: password
          INIT_POSTGRES_SUPER_USER:
            valueFrom:
              secretKeyRef:
                name: gatus-postgres-superuser
                key: username
          INIT_POSTGRES_SUPER_PASS:
            valueFrom:
              secretKeyRef:
                name: gatus-postgres-superuser
                key: password
      02-init-config: &syncContainer
        image:
          repository: ghcr.io/kiwigrid/k8s-sidecar
          tag: 1.26.1
        env:
          FOLDER: /config
          LABEL: gatus.io/enabled
          NAMESPACE: ALL
          RESOURCE: configmap
          UNIQUE_FILENAMES: true
          METHOD: LIST
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
          limits:
            memory: 128Mi
    containers:
      main:
        env:
          TZ: *tz
          GATUS_CONFIG_PATH: /config
          CUSTOM_WEB_PORT: *port
          INIT_POSTGRES_DBNAME: *pgdb
          INIT_POSTGRES_HOST: *pghost
          INIT_POSTGRES_USER: *pguser
          INIT_POSTGRES_PASS: *pgpass
        probes:
          liveness: &probe
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /health
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probe
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
    pod:
      #dnsConfig:
      #  options:
      #    - name: ndots
      #      value: "1"
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Gatus is a developer-oriented health dashboard that gives you the ability to monitor your services.
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: gatus.png
      gethomepage.dev/name: ${HOSTNAME:=gatus}
      nginx.ingress.kubernetes.io/server-snippet: &serversnippit |
        location /metrics {
          deny all;
        }
    className: internal
    hosts:
      - host: &host ${HOSTNAME:=gatus}.${INTERNAL_DOMAIN}
        paths: &paths
          - path: /
            service:
              identifier: main
              port: *port
    tls:
      - hosts:
          - *host
        secretName: gatus-tls
  external:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      external-dns.alpha.kubernetes.io/target: "${CLUSTER_NAME}.${EXTERNAL_DOMAIN}"
      nginx.ingress.kubernetes.io/configuration-snippet: *serversnippit
    className: external
    hosts:
      - host: &externalhost ${HOSTNAME:=gatus}.${EXTERNAL_DOMAIN}
        paths: *paths
    tls:
      - hosts: [*externalhost]
        secretName: external-gatus-tls
persistence:
  config:
    type: emptyDir
  config-file:
    type: configMap
    name: gatus-config
    globalMounts:
      - path: /config/config.yaml
        subPath: config.yaml
        readOnly: true
serviceAccount:
  create: true
  name: gatus-app
serviceMonitor:
  app:
    serviceName: gatus-app
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s
