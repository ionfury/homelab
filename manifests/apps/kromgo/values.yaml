---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-3.0.1/charts/other/app-template/values.schema.json

defaultPodOptions:
  labels:
    networking/allow-egress-to-kubedns: "true"
    networking/allow-egress-to-prometheus: "true"
    networking/allow-ingress-to-external-nginx: "true"
    networking/allow-ingress-to-internal-nginx: "true"
    networking/allow-ingress-to-prometheus: "true"
  automountServiceAccountToken: false
  enableServiceLinks: false
  securityContext:
    runAsUser: 568
    runAsGroup: 568
    runAsNonRoot: true
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: kromgo-app
service:
  main:
    controller: main
    ports:
      http:
        port: &port 80
controllers:
  main:
    replicas: 2
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        env:
          PROMETHEUS_URL: http://kube-prometheus-stack-app-prometheus.monitoring.svc.cluster.local:9090
          PORT: *port
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /-/ready
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 64Mi
ingress:
  main:
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      external-dns.alpha.kubernetes.io/target: "${CLUSTER_NAME}.${EXTERNAL_DOMAIN}"
    className: external
    hosts:
      - host: &host ${HOSTNAME:=kromgo}.${EXTERNAL_DOMAIN}
        paths:
          - path: /
            service:
              identifier: main
              port: http
    tls:
      - hosts: [*host]
  internal:
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
    className: internal
    hosts:
      - host: &internalhost ${HOSTNAME:=kromgo}.${INTERNAL_DOMAIN}
        paths:
          - path: /
            service:
              identifier: main
              port: http
    tls:
      - hosts: [*internalhost]
persistence:
  config-file:
    type: configMap
    name: kromgo-config
    globalMounts:
      - path: /kromgo/config.yaml
        subPath: config.yaml
        readOnly: true
