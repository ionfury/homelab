namespaceOverride: ${NAMESPACE}
defaultRules:
  create: true
  disabled:
    KubeletTooManyPods: true # expr is using on pod,namespace instead of exported_pod,exported_namespace
alertmanager:
  enabled: true
  config:
    route:
      group_by:
        - alertname
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 48h
      receiver: discord-slack # Defined in secret alertmanager-webhook
      routes:
        - receiver: heartbeat # Defined in secret alertmanager-webhook
          match:
            alertname: Watchdog
          repeat_interval: 1m
          group_interval: 1m
        - receiver: "null"
          match:
            alertname: InfoInhibitor
  templateFiles:
    slack_template.tmpl: |-
      {{/* Alertmanager Silence link */}}
      {{ define "__alert_silence_link" -}}
          {{ .ExternalURL }}/#/silences/new?filter={
          {{- range .CommonLabels.SortedPairs -}}
              {{- if ne .Name "alertname" -}}
                  {{- .Name }}="{{- .Value -}}",%20
              {{- end -}}
          {{- end -}}
          alertname="{{- .CommonLabels.alertname -}}"}
      {{- end }}

      {{/* Severity of the alert */}}
      {{ define "__alert_severity" -}}
          {{- if eq .CommonLabels.severity "critical" -}}
          **Severity:** `Critical`
          {{- else if eq .CommonLabels.severity "warning" -}}
          **Severity:** `Warning`
          {{- else if eq .CommonLabels.severity "info" -}}
          **Severity:** `Info`
          {{- else -}}
          **Severity:** :question: {{ .CommonLabels.severity }}
          {{- end }}
      {{- end }}

      {{/* Title of the Slack alert */}}
      {{ define "slack.title" -}}
        [{{ .Status | toUpper -}}
        {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
        ] {{ .CommonLabels.alertname }}
      {{- end }}


      {{/* Color of Slack attachment (appears as line next to alert )*/}}
      {{ define "slack.color" -}}
          {{ if eq .Status "firing" -}}
              {{ if eq .CommonLabels.severity "warning" -}}
                  warning
              {{- else if eq .CommonLabels.severity "critical" -}}
                  danger
              {{- else -}}
                  #439FE0
              {{- end -}}
          {{ else -}}
          good
          {{- end }}
      {{- end }}

      {{/* The text to display in the alert */}}
      {{ define "slack.text" -}}

          {{ template "__alert_severity" . }}
          {{- if (index .Alerts 0).Annotations.summary }}
          {{- "\n" -}}
          **Summary:** {{ (index .Alerts 0).Annotations.summary }}
          {{- end }}
          {{ range .Alerts }}
              {{- if .Annotations.description }}
              {{- "\n" -}}
              {{ .Annotations.description }}
              {{- end }}
              {{- if .Annotations.message }}
              {{- "\n" -}}
              {{ .Annotations.message }}
              {{- end }}
              {{- if .GeneratorURL }}
              {{- "\n" -}}
              :mag: [Query]({{ .GeneratorURL }})
              {{- end }}
              {{- if .Annotations.runbook_url }}
              {{- "\n" -}}
              :green_book: [Runbook]({{ .Annotations.runbook_url }})
              {{- end }}
              {{- if .Annotations.runbook_url }}
              {{- "\n" -}}
              :chart_with_upwards_trend: [Dashboard]({{ .Annotations.dashboard_url }})
              {{- end }}
          {{- end }}
          {{- "\n" -}}
          :no_bell: [Silence]({{ template "__alert_silence_link" . }})
      {{- end }}

    discord_template.tmpl: |-
      {{ define "our.discord.title" }}
        {{ .GroupLabels.SortedPairs.Values | join " " }}
      {{ end }}

      {{ define "our.discord.message.list" }}
        {{ range . }}
          - **Alert**: {{ printf "%.150s" .Annotations.summary }} ({{ .Labels.severity }})
          - **Description**: {{ printf "%.150s" .Annotations.description }}
          - **Runbook**: {{ printf "%.150s" .Annotations.runbook }}

          - **Cluster**: {{ .Labels.prometheus_source }}
          - **Namespace**: {{ .Labels.namespace }}
          - **Service**: {{ .Labels.service }}

          [Source]({{ .GeneratorURL  }})
        {{ end }}
      {{ end }}

      {{ define "our.discord.alerts" }}
        {{ if gt (len .Alerts.Firing) 0 }}
          # Alerts Firing:
          {{ template "our.discord.message.list" .Alerts.Firing }}
        {{ end }}
        {{ if gt (len .Alerts.Resolved) 0 }}
          # Alerts Resolved:
          {{ template "our.discord.message.list" .Alerts.Resolved }}
        {{ end }}
      {{ end}}
  ingress:
    enabled: true
    pathType: Prefix
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: An open-source alerting system.
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: alertmanager.png
      gethomepage.dev/name: Alertmanager
    ingressClassName: internal
    hosts:
      - alertmanager.${INTERNAL_DOMAIN}
    tls:
      - secretName: alertmanager-tls
        hosts:
          - alertmanager.${INTERNAL_DOMAIN}
  alertmanagerSpec:
    replicas: 2
grafana:
  enabled: false
  forceDeployDashboards: true
  sidecar:
    dashboards:
      multicluster:
        etcd:
          enabled: true
kubeApiServer:
  enabled: true

kubelet:
  enabled: true

kubeControllerManager:
  enabled: false

coreDns:
  enabled: true

kubeDns:
  enabled: false

kubeEtcd:
  enabled: false

kubeScheduler:
  enabled: false

kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: false

nodeExporter:
  enabled: true

prometheus-node-exporter:
  namespaceOverride: ${NAMESPACE}

prometheus:
  enabled: true
  ingress:
    enabled: true
    pathType: Prefix
    annotations:
      cert-manager.io/cluster-issuer: "cloudflare"
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: Combine Prometheus metric alerts with log & trace alerts to improve accuracy.
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: prometheus.png
      gethomepage.dev/name: Prometheus
      gethomepage.dev/widget.type: prometheus
      gethomepage.dev/widget.url: http://kube-prometheus-stack-app-prometheus.${NAMESPACE}.svc.cluster.local:9090
    ingressClassName: internal
    hosts:
      - prometheus.${INTERNAL_DOMAIN}
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.${INTERNAL_DOMAIN}
  prometheusSpec:
    replicas: 1
    externalLabels:
      prometheus_source: ${CLUSTER_NAME}
    retentionSize: 99GiB
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ${STORAGE_CLASS_SLOW:=default}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 100Gi

prometheusOperator:
  admissionWebhooks:
    certManager:
      enabled: false
  prometheusConfigReloader:
    image:
      registry: quay.io
      repository: prometheus-operator/prometheus-config-reloader
      # if not set appVersion field from Chart.yaml is used
      tag: v0.65.0

cleanPrometheusOperatorObjectNames: true
