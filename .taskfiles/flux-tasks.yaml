version: "3"

tasks:
  is-git-synced:
    silent: true
    vars:
      NAMESPACE: flux-system
      NAME: flux-system
    desc: Checks if the stored stored artifact git hash matches the remote hash.
    cmds:
      - cmd: |
          currenthash=$(kubectl get gitrepositories.source.toolkit.fluxcd.io -n {{ .NAMESPACE }} {{ .NAME }} -o jsonpath='{.status.artifact.revision}' | awk -F'sha1:' '{print $2}')
          repourl=$(kubectl get gitrepositories.source.toolkit.fluxcd.io -n {{ .NAMESPACE }} {{ .NAME }} -o jsonpath='{.spec.url}')
          latesthash=$(git ls-remote $repourl main | cut -f1)
          if [ "$currenthash" == "$latesthash" ]; then
            echo "OK"
          else
            echo "NOT SYNCED"
          fi
  reconcile-kustomization:
    desc: Force reconciliation of flux-system kustomization to pull in latest changes from Git
    cmds:
      - flux reconcile -n flux-system source git flux-system
      - flux reconcile -n flux-system kustomization flux-system
  reconcile-helm:
    desc: Force reconciliation of all failed helm releases.
    cmds:
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L 1 bash -c 'flux suspend hr $0 -n $1'
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L 1 bash -c 'flux resume hr $0 -n $1'
  suspend-kustomization:
    desc: Suspend every kustomization in the cluster.
    cmds:
      - kubectl get kustomization -A | awk '{print $2, $1}' | xargs -L 1 bash -c 'flux suspend kustomization $0 -n $1'
  resume-kustomization:
    desc: Resume every kustomization in the cluster.
    cmds:
      - kubectl get kustomization -A | awk '{print $2, $1}' | xargs -L 1 bash -c 'flux resume kustomization $0 -n $1'
