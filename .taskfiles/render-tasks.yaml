version: "3"

env:
  CLUSTER: '{{.CLUSTER | default "homelab-1"}}'
  NAMESPACE: '{{.NAMESPACE | default "default"}}'
  APP: '{{.APP | default "default.yaml"}}'
tasks:
  alertmanager-discord-webhook:
    desc: Renders the discord message template.
    vars:
      APP: kube-prometheus-stack
      VALUES: values.yaml
      DATASOURCE: template-datasources/alert.yaml
      TEMPLATE_PATH: .alertmanager.templateFiles."discord_template.tmpl"
    cmds:
      - cat {{.APPS_DIR}}/{{.APP}}/{{.VALUES}} | yq '{{.TEMPLATE_PATH}}' | gomplate -d test=file://{{.APPS_DIR}}/{{.APP}}/{{.DATASOURCE}}
  cluster:
    interactive: true
    desc: Renders out all apps for a cluster.
    requires:
      vars: [CLUSTERS_DIR, APPS_DIR, KUBE_VERSION]
    cmds:
      - task: template-cluster-namespace-app
        vars:
          PROJECT_DIR: "{{.PROJECT_DIR}}"
          CLUSTERS_DIR: "{{.CLUSTERS_DIR}}"
          APPS_DIR: "{{.APPS_DIR}}"
          KUBE_VERSION: "{{.KUBE_VERSION}}"
          CLUSTER: "{{.CLUSTER}}"
          NAMESPACE: "{{.NAMESPACE}}"
          APP: "{{.APP}}"

  cluster-namespace-app:
    desc: Renders an app as deployed to a cluster.
    requires:
      vars:
        [
          PROJECT_DIR,
          CLUSTERS_DIR,
          APPS_DIR,
          KUBE_VERSION,
          CLUSTER,
          NAMESPACE,
          APP,
        ]
    vars:
      PATH:
        sh: cat {{.CLUSTERS_DIR}}/{{.CLUSTER}}/{{.NAMESPACE}}/{{.APP}}.yaml | yq -r '.spec.path'
      HELM_CHART:
        sh: cat {{.CLUSTERS_DIR}}/{{.CLUSTER}}/{{.NAMESPACE}}/{{.APP}}.yaml | yq -r '.spec.postBuild.substitute.HELM_CHART'
      HELM_CHART_REPOSITORY:
        sh: cat {{.CLUSTERS_DIR}}/{{.CLUSTER}}/{{.NAMESPACE}}/{{.APP}}.yaml | yq -r '.spec.postBuild.substitute.HELM_CHART_REPOSITORY'
      HELM_CHART_VERSION:
        sh: cat {{.CLUSTERS_DIR}}/{{.CLUSTER}}/{{.NAMESPACE}}/{{.APP}}.yaml | yq -r '.spec.postBuild.substitute.HELM_CHART_VERSION'
    cmds:
      - cmd: |
          {{if contains "https" .HELM_CHART_REPOSITORY}}
            helm repo add {{.HELM_CHART}} {{.HELM_CHART_REPOSITORY}} >/dev/null 2>&1
          {{end}}
        #  {{else}}
        #    HELM_EXPERIMENTAL_OCI=1 helm pull oci://{{.HELM_CHART_REPOSITORY}}/{{.CHART}} --version {{.CHART_VERSION}}
      - cmd: |
          {{if contains "https" .HELM_CHART_REPOSITORY}}
            helm template {{.HELM_CHART}} {{.HELM_CHART}}/{{.HELM_CHART}} --kube-version {{.KUBE_VERSION}} --version {{.HELM_CHART_VERSION}} --values {{.PROJECT_DIR}}/{{.PATH}}/values.yaml
          {{else}}
            HELM_EXPERIMENTAL_OCI=1 helm template oci://{{.HELM_CHART_REPOSITORY}}/{{.HELM_CHART}} --version {{.HELM_CHART_VERSION}} --values {{.PROJECT_DIR}}/{{.PATH}}/values.yaml
          {{end}}
